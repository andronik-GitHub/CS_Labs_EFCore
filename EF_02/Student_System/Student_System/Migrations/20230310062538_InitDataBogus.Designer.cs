// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Student_System.Data;

#nullable disable

namespace Student_System.Migrations
{
    [DbContext(typeof(StudentSystemContext))]
    [Migration("20230310062538_InitDataBogus")]
    partial class InitDataBogus
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Student_System.Data.Models.Courses", b =>
                {
                    b.Property<Guid>("CourseId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Description")
                        .IsUnicode(true)
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("EndDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("datetime2");

                    b.HasKey("CourseId");

                    b.ToTable("Courses");

                    b.HasData(
                        new
                        {
                            CourseId = new Guid("fd846371-f4f3-4965-8073-2e397c5900e8"),
                            Description = "Andy shoes are designed to keeping in mind durability as well as trends, the most stylish range of shoes & sandals",
                            EndDate = new DateTime(2028, 3, 10, 8, 25, 37, 919, DateTimeKind.Local).AddTicks(6952),
                            Name = "Handmade Wooden Bike",
                            Price = 116.4221207418900750m,
                            StartDate = new DateTime(2020, 3, 30, 15, 45, 24, 61, DateTimeKind.Local).AddTicks(2359)
                        },
                        new
                        {
                            CourseId = new Guid("28e996f0-b7ea-4b87-9a79-b7e7aaeaf851"),
                            Description = "The Apollotech B340 is an affordable wireless mouse with reliable connectivity, 12 months battery life and modern design",
                            EndDate = new DateTime(2028, 3, 10, 8, 25, 37, 920, DateTimeKind.Local).AddTicks(7168),
                            Name = "Generic Frozen Tuna",
                            Price = 119.9278693440810750m,
                            StartDate = new DateTime(2021, 2, 5, 17, 24, 52, 983, DateTimeKind.Local).AddTicks(8520)
                        },
                        new
                        {
                            CourseId = new Guid("b13d51d6-c7e1-4019-9ff1-ca19ebc69e74"),
                            Description = "The automobile layout consists of a front-engine design, with transaxle-type transmissions mounted at the rear of the engine and four wheel drive",
                            EndDate = new DateTime(2028, 3, 10, 8, 25, 37, 920, DateTimeKind.Local).AddTicks(7251),
                            Name = "Handcrafted Granite Towels",
                            Price = 238.9438760608792000m,
                            StartDate = new DateTime(2018, 5, 3, 5, 6, 50, 134, DateTimeKind.Local).AddTicks(2799)
                        },
                        new
                        {
                            CourseId = new Guid("4886ba70-789c-4e9d-b0a2-b1b511265527"),
                            Description = "Andy shoes are designed to keeping in mind durability as well as trends, the most stylish range of shoes & sandals",
                            EndDate = new DateTime(2028, 3, 10, 8, 25, 37, 920, DateTimeKind.Local).AddTicks(7301),
                            Name = "Unbranded Wooden Ball",
                            Price = 235.6737433836441500m,
                            StartDate = new DateTime(2022, 7, 21, 9, 20, 28, 276, DateTimeKind.Local).AddTicks(3997)
                        },
                        new
                        {
                            CourseId = new Guid("47da47dc-d519-476d-9658-e47b8be267c9"),
                            Description = "Andy shoes are designed to keeping in mind durability as well as trends, the most stylish range of shoes & sandals",
                            EndDate = new DateTime(2028, 3, 10, 8, 25, 37, 920, DateTimeKind.Local).AddTicks(7351),
                            Name = "Ergonomic Granite Fish",
                            Price = 199.0576884601252000m,
                            StartDate = new DateTime(2019, 6, 21, 6, 57, 47, 571, DateTimeKind.Local).AddTicks(9770)
                        },
                        new
                        {
                            CourseId = new Guid("2f19ce22-0795-4e88-96f4-aa85ffe36962"),
                            Description = "Boston's most advanced compression wear technology increases muscle oxygenation, stabilizes active muscles",
                            EndDate = new DateTime(2028, 3, 10, 8, 25, 37, 920, DateTimeKind.Local).AddTicks(7419),
                            Name = "Gorgeous Steel Hat",
                            Price = 310.6450910788529500m,
                            StartDate = new DateTime(2021, 4, 4, 20, 19, 34, 687, DateTimeKind.Local).AddTicks(7388)
                        },
                        new
                        {
                            CourseId = new Guid("f5b1e826-31ad-44ad-9068-aec15291d27f"),
                            Description = "New range of formal shirts are designed keeping you in mind. With fits and styling that will make you stand apart",
                            EndDate = new DateTime(2028, 3, 10, 8, 25, 37, 920, DateTimeKind.Local).AddTicks(7464),
                            Name = "Generic Steel Computer",
                            Price = 313.9253602774164500m,
                            StartDate = new DateTime(2018, 7, 29, 2, 8, 57, 514, DateTimeKind.Local).AddTicks(6317)
                        },
                        new
                        {
                            CourseId = new Guid("53b4f7f8-90d6-48ee-9aac-697f31e5c697"),
                            EndDate = new DateTime(2028, 3, 10, 8, 25, 37, 920, DateTimeKind.Local).AddTicks(7512),
                            Name = "Refined Soft Chicken",
                            Price = 86.64731648422364000m,
                            StartDate = new DateTime(2022, 7, 10, 22, 41, 43, 52, DateTimeKind.Local).AddTicks(3370)
                        },
                        new
                        {
                            CourseId = new Guid("da56f125-4a16-4266-9016-98fd08e906c1"),
                            EndDate = new DateTime(2028, 3, 10, 8, 25, 37, 920, DateTimeKind.Local).AddTicks(7555),
                            Name = "Generic Soft Chicken",
                            Price = 257.4506773928234000m,
                            StartDate = new DateTime(2018, 10, 30, 22, 50, 39, 262, DateTimeKind.Local).AddTicks(1388)
                        },
                        new
                        {
                            CourseId = new Guid("c6aabad0-e171-4cd4-bfe6-c18a75fa05c2"),
                            Description = "The slim & simple Maple Gaming Keyboard from Dev Byte comes with a sleek body and 7- Color RGB LED Back-lighting for smart functionality",
                            EndDate = new DateTime(2028, 3, 10, 8, 25, 37, 920, DateTimeKind.Local).AddTicks(7605),
                            Name = "Incredible Steel Cheese",
                            Price = 178.4552859418138500m,
                            StartDate = new DateTime(2018, 10, 3, 17, 0, 17, 985, DateTimeKind.Local).AddTicks(3800)
                        },
                        new
                        {
                            CourseId = new Guid("2aff0986-32da-42b6-bd85-261a5471173e"),
                            Description = "The slim & simple Maple Gaming Keyboard from Dev Byte comes with a sleek body and 7- Color RGB LED Back-lighting for smart functionality",
                            EndDate = new DateTime(2028, 3, 10, 8, 25, 38, 292, DateTimeKind.Local).AddTicks(9551),
                            Name = "Handcrafted Steel Towels",
                            Price = 294.0238831290193750m,
                            StartDate = new DateTime(2020, 10, 28, 0, 27, 20, 42, DateTimeKind.Local).AddTicks(9885)
                        },
                        new
                        {
                            CourseId = new Guid("c708c352-12c2-4a03-979b-62058e2e2858"),
                            EndDate = new DateTime(2028, 3, 10, 8, 25, 38, 293, DateTimeKind.Local).AddTicks(503),
                            Name = "Awesome Soft Bacon",
                            Price = 119.4349396746700500m,
                            StartDate = new DateTime(2020, 1, 26, 5, 58, 25, 835, DateTimeKind.Local).AddTicks(4802)
                        },
                        new
                        {
                            CourseId = new Guid("30617d92-2a2a-42b1-a57d-ccba648a5543"),
                            EndDate = new DateTime(2028, 3, 10, 8, 25, 38, 293, DateTimeKind.Local).AddTicks(558),
                            Name = "Generic Fresh Fish",
                            Price = 75.0674642535825887750m,
                            StartDate = new DateTime(2021, 3, 5, 1, 26, 40, 64, DateTimeKind.Local).AddTicks(7511)
                        },
                        new
                        {
                            CourseId = new Guid("037c0bf0-9754-45b6-a38a-17652ee712c7"),
                            Description = "The Nagasaki Lander is the trademarked name of several series of Nagasaki sport bikes, that started with the 1984 ABC800J",
                            EndDate = new DateTime(2028, 3, 10, 8, 25, 38, 293, DateTimeKind.Local).AddTicks(604),
                            Name = "Small Granite Salad",
                            Price = 156.8585187236390750m,
                            StartDate = new DateTime(2020, 9, 19, 15, 11, 8, 403, DateTimeKind.Local).AddTicks(6583)
                        },
                        new
                        {
                            CourseId = new Guid("8c1d7ae2-b523-4d92-ade2-c39c29d98d9c"),
                            Description = "The Apollotech B340 is an affordable wireless mouse with reliable connectivity, 12 months battery life and modern design",
                            EndDate = new DateTime(2028, 3, 10, 8, 25, 38, 293, DateTimeKind.Local).AddTicks(651),
                            Name = "Handmade Wooden Pants",
                            Price = 296.0947390573977000m,
                            StartDate = new DateTime(2018, 6, 30, 0, 5, 1, 177, DateTimeKind.Local).AddTicks(9344)
                        },
                        new
                        {
                            CourseId = new Guid("bcc0b173-280a-4d1a-a29b-108aeb6cff68"),
                            Description = "Ergonomic executive chair upholstered in bonded black leather and PVC padded seat and back for all-day comfort and support",
                            EndDate = new DateTime(2028, 3, 10, 8, 25, 38, 293, DateTimeKind.Local).AddTicks(708),
                            Name = "Licensed Frozen Salad",
                            Price = 199.9926722831638500m,
                            StartDate = new DateTime(2020, 11, 14, 20, 19, 42, 790, DateTimeKind.Local).AddTicks(371)
                        },
                        new
                        {
                            CourseId = new Guid("bd86ebbc-15df-4268-9ec9-dc6a6c579806"),
                            Description = "New ABC 13 9370, 13.3, 5th Gen CoreA5-8250U, 8GB RAM, 256GB SSD, power UHD Graphics, OS 10 Home, OS Office A & J 2016",
                            EndDate = new DateTime(2028, 3, 10, 8, 25, 38, 293, DateTimeKind.Local).AddTicks(753),
                            Name = "Handmade Wooden Hat",
                            Price = 191.6108864076939750m,
                            StartDate = new DateTime(2019, 12, 20, 11, 27, 37, 639, DateTimeKind.Local).AddTicks(6615)
                        },
                        new
                        {
                            CourseId = new Guid("e100f62c-b528-45b3-b54f-757a89c089ed"),
                            Description = "The Football Is Good For Training And Recreational Purposes",
                            EndDate = new DateTime(2028, 3, 10, 8, 25, 38, 293, DateTimeKind.Local).AddTicks(797),
                            Name = "Tasty Concrete Keyboard",
                            Price = 91.33516294232154750m,
                            StartDate = new DateTime(2018, 11, 21, 19, 39, 22, 963, DateTimeKind.Local).AddTicks(2201)
                        },
                        new
                        {
                            CourseId = new Guid("00384138-6c38-4ad2-9d0b-1bd69abc60ea"),
                            Description = "The beautiful range of Apple Naturalé that has an exciting mix of natural ingredients. With the Goodness of 100% Natural Ingredients",
                            EndDate = new DateTime(2028, 3, 10, 8, 25, 38, 293, DateTimeKind.Local).AddTicks(941),
                            Name = "Rustic Steel Fish",
                            Price = 188.2747135933245250m,
                            StartDate = new DateTime(2022, 7, 12, 0, 47, 37, 268, DateTimeKind.Local).AddTicks(1396)
                        },
                        new
                        {
                            CourseId = new Guid("8c562929-651a-4720-b3f1-9c14d65b0bba"),
                            EndDate = new DateTime(2028, 3, 10, 8, 25, 38, 293, DateTimeKind.Local).AddTicks(987),
                            Name = "Practical Rubber Gloves",
                            Price = 253.4959846726688500m,
                            StartDate = new DateTime(2019, 2, 4, 10, 55, 45, 315, DateTimeKind.Local).AddTicks(958)
                        });
                });

            modelBuilder.Entity("Student_System.Data.Models.Homework", b =>
                {
                    b.Property<Guid>("HomeworkId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Content")
                        .IsRequired()
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)");

                    b.Property<int>("ContentType")
                        .HasColumnType("int");

                    b.Property<Guid>("CourseId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("StudentId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("SubmissionTime")
                        .HasColumnType("datetime2");

                    b.HasKey("HomeworkId");

                    b.HasIndex("CourseId");

                    b.HasIndex("StudentId");

                    b.ToTable("Homework");

                    b.HasData(
                        new
                        {
                            HomeworkId = new Guid("5b2ee20f-d384-4c31-9462-b90d16e0a932"),
                            Content = "https://nettie.com",
                            ContentType = 1,
                            CourseId = new Guid("47da47dc-d519-476d-9658-e47b8be267c9"),
                            StudentId = new Guid("7d96f2c1-243b-4dcf-8663-37a01fce18a6"),
                            SubmissionTime = new DateTime(2023, 4, 9, 22, 38, 8, 950, DateTimeKind.Local).AddTicks(8690)
                        },
                        new
                        {
                            HomeworkId = new Guid("7c768a5f-acd9-4dde-889e-687e0b9a2073"),
                            Content = "https://kevon.biz",
                            ContentType = 3,
                            CourseId = new Guid("47da47dc-d519-476d-9658-e47b8be267c9"),
                            StudentId = new Guid("7d96f2c1-243b-4dcf-8663-37a01fce18a6"),
                            SubmissionTime = new DateTime(2023, 3, 20, 7, 33, 26, 605, DateTimeKind.Local).AddTicks(643)
                        },
                        new
                        {
                            HomeworkId = new Guid("5f029670-9b9e-4e0a-98ef-cb846c6714e1"),
                            Content = "https://arnulfo.org",
                            ContentType = 2,
                            CourseId = new Guid("da56f125-4a16-4266-9016-98fd08e906c1"),
                            StudentId = new Guid("7d96f2c1-243b-4dcf-8663-37a01fce18a6"),
                            SubmissionTime = new DateTime(2023, 3, 23, 16, 16, 4, 263, DateTimeKind.Local).AddTicks(5650)
                        },
                        new
                        {
                            HomeworkId = new Guid("7f652cec-8821-43f9-a20b-d46c99e8b81e"),
                            Content = "http://idella.org",
                            ContentType = 0,
                            CourseId = new Guid("da56f125-4a16-4266-9016-98fd08e906c1"),
                            StudentId = new Guid("7d96f2c1-243b-4dcf-8663-37a01fce18a6"),
                            SubmissionTime = new DateTime(2023, 3, 25, 6, 42, 48, 925, DateTimeKind.Local).AddTicks(2337)
                        },
                        new
                        {
                            HomeworkId = new Guid("ba2cb5a5-e808-4866-b855-a7847312642b"),
                            Content = "http://alejandrin.info",
                            ContentType = 4,
                            CourseId = new Guid("28e996f0-b7ea-4b87-9a79-b7e7aaeaf851"),
                            StudentId = new Guid("62f43b67-9869-40c8-9fd4-96082c319d4a"),
                            SubmissionTime = new DateTime(2023, 4, 9, 9, 0, 27, 347, DateTimeKind.Local).AddTicks(9795)
                        },
                        new
                        {
                            HomeworkId = new Guid("d9b7e0c0-fb8f-42eb-a78d-03b5d923ff3e"),
                            Content = "https://rafael.net",
                            ContentType = 1,
                            CourseId = new Guid("28e996f0-b7ea-4b87-9a79-b7e7aaeaf851"),
                            StudentId = new Guid("62f43b67-9869-40c8-9fd4-96082c319d4a"),
                            SubmissionTime = new DateTime(2023, 3, 12, 7, 9, 30, 377, DateTimeKind.Local).AddTicks(8116)
                        },
                        new
                        {
                            HomeworkId = new Guid("e2b44ca8-308a-4821-bb14-5835516dce45"),
                            Content = "https://brigitte.info",
                            ContentType = 1,
                            CourseId = new Guid("f5b1e826-31ad-44ad-9068-aec15291d27f"),
                            StudentId = new Guid("f2f94084-9d4d-4f5e-ae54-4b908e687227"),
                            SubmissionTime = new DateTime(2023, 3, 25, 3, 47, 30, 44, DateTimeKind.Local).AddTicks(4491)
                        },
                        new
                        {
                            HomeworkId = new Guid("9a26d35e-5b06-46b4-ac38-b3682cbb5bd1"),
                            Content = "http://lilla.biz",
                            ContentType = 3,
                            CourseId = new Guid("f5b1e826-31ad-44ad-9068-aec15291d27f"),
                            StudentId = new Guid("f2f94084-9d4d-4f5e-ae54-4b908e687227"),
                            SubmissionTime = new DateTime(2023, 3, 22, 4, 39, 4, 728, DateTimeKind.Local).AddTicks(7021)
                        });
                });

            modelBuilder.Entity("Student_System.Data.Models.Resources", b =>
                {
                    b.Property<Guid>("ResourceId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CourseId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("ResourceType")
                        .HasColumnType("int");

                    b.Property<string>("Url")
                        .IsRequired()
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)");

                    b.HasKey("ResourceId");

                    b.HasIndex("CourseId");

                    b.ToTable("Resources");

                    b.HasData(
                        new
                        {
                            ResourceId = new Guid("eab12f16-26d9-422d-8491-6bac0e4102c3"),
                            CourseId = new Guid("28e996f0-b7ea-4b87-9a79-b7e7aaeaf851"),
                            Name = "Harvey, Reichel and O'Reilly",
                            ResourceType = 3,
                            Url = "https://aileen.biz"
                        },
                        new
                        {
                            ResourceId = new Guid("d0f99b73-6a3e-4fd9-9996-807451895047"),
                            CourseId = new Guid("28e996f0-b7ea-4b87-9a79-b7e7aaeaf851"),
                            Name = "Funk Group",
                            ResourceType = 1,
                            Url = "http://noemy.com"
                        },
                        new
                        {
                            ResourceId = new Guid("32fc1451-c215-44e8-93ae-90e4fc4278b2"),
                            CourseId = new Guid("c6aabad0-e171-4cd4-bfe6-c18a75fa05c2"),
                            Name = "Kuhlman - Hagenes",
                            ResourceType = 3,
                            Url = "http://rudy.biz"
                        },
                        new
                        {
                            ResourceId = new Guid("452ed2e4-14b8-4928-9675-76ac7133d888"),
                            CourseId = new Guid("c6aabad0-e171-4cd4-bfe6-c18a75fa05c2"),
                            Name = "Wehner and Sons",
                            ResourceType = 2,
                            Url = "http://rupert.name"
                        },
                        new
                        {
                            ResourceId = new Guid("c4da5e22-7d86-481f-a12a-cc3082fffcbd"),
                            CourseId = new Guid("2f19ce22-0795-4e88-96f4-aa85ffe36962"),
                            Name = "Grady, Hahn and Mante",
                            ResourceType = 2,
                            Url = "https://gianni.net"
                        },
                        new
                        {
                            ResourceId = new Guid("be0f845d-35bc-4305-a191-7501a8ce6288"),
                            CourseId = new Guid("2f19ce22-0795-4e88-96f4-aa85ffe36962"),
                            Name = "Leuschke LLC",
                            ResourceType = 1,
                            Url = "http://nyasia.info"
                        },
                        new
                        {
                            ResourceId = new Guid("c517c22c-8397-4142-b28b-90606e65d5c8"),
                            CourseId = new Guid("53b4f7f8-90d6-48ee-9aac-697f31e5c697"),
                            Name = "Gibson - Walker",
                            ResourceType = 0,
                            Url = "https://ardith.info"
                        },
                        new
                        {
                            ResourceId = new Guid("10f52d01-9248-44d9-b3ca-260ef748bb0b"),
                            CourseId = new Guid("53b4f7f8-90d6-48ee-9aac-697f31e5c697"),
                            Name = "Brakus, Friesen and Kunde",
                            ResourceType = 2,
                            Url = "http://freda.com"
                        });
                });

            modelBuilder.Entity("Student_System.Data.Models.Students", b =>
                {
                    b.Property<Guid>("StudentId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("Birthday")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nchar(10)")
                        .IsFixedLength();

                    b.Property<bool>("RegisteredOn")
                        .HasColumnType("bit");

                    b.HasKey("StudentId");

                    b.ToTable("Students");

                    b.HasData(
                        new
                        {
                            StudentId = new Guid("f2f94084-9d4d-4f5e-ae54-4b908e687227"),
                            Birthday = new DateTime(1999, 6, 10, 2, 45, 17, 114, DateTimeKind.Local).AddTicks(9723),
                            Name = "Gust Haley",
                            PhoneNumber = "369543495",
                            RegisteredOn = true
                        },
                        new
                        {
                            StudentId = new Guid("489f71fb-4540-4a4a-a0be-cf1197eff1c5"),
                            Birthday = new DateTime(2006, 2, 5, 14, 34, 40, 497, DateTimeKind.Local).AddTicks(3871),
                            Name = "Bud Senger",
                            PhoneNumber = "241835376",
                            RegisteredOn = true
                        },
                        new
                        {
                            StudentId = new Guid("bcc202a0-a93f-46cf-8e8d-5235a5f58494"),
                            Birthday = new DateTime(1996, 12, 8, 1, 56, 24, 998, DateTimeKind.Local).AddTicks(9735),
                            Name = "Roberta Lang",
                            PhoneNumber = "068843862",
                            RegisteredOn = true
                        },
                        new
                        {
                            StudentId = new Guid("62f43b67-9869-40c8-9fd4-96082c319d4a"),
                            Name = "Victor Will",
                            PhoneNumber = "992722317",
                            RegisteredOn = false
                        },
                        new
                        {
                            StudentId = new Guid("7d96f2c1-243b-4dcf-8663-37a01fce18a6"),
                            Birthday = new DateTime(2003, 2, 12, 7, 57, 22, 167, DateTimeKind.Local).AddTicks(6631),
                            Name = "Jacynthe Powlowski",
                            PhoneNumber = "859191534",
                            RegisteredOn = false
                        },
                        new
                        {
                            StudentId = new Guid("d939edb6-20c9-482a-9dba-da282381e179"),
                            Birthday = new DateTime(2000, 5, 2, 5, 6, 7, 190, DateTimeKind.Local).AddTicks(1811),
                            Name = "Gardner Crooks",
                            PhoneNumber = "158402245",
                            RegisteredOn = false
                        },
                        new
                        {
                            StudentId = new Guid("b6b3a02f-5f0f-48ee-b9d9-28fb879b4ac0"),
                            Birthday = new DateTime(2002, 2, 21, 9, 11, 35, 521, DateTimeKind.Local).AddTicks(2246),
                            Name = "Gerhard Brown",
                            PhoneNumber = "581445280",
                            RegisteredOn = false
                        },
                        new
                        {
                            StudentId = new Guid("c97bf746-4fd9-4aeb-902f-114391cc8223"),
                            Birthday = new DateTime(2004, 10, 2, 4, 25, 30, 159, DateTimeKind.Local).AddTicks(2417),
                            Name = "Turner Zemlak",
                            PhoneNumber = "882531240",
                            RegisteredOn = false
                        },
                        new
                        {
                            StudentId = new Guid("105976e5-60f9-4d45-bc41-fcff852b944c"),
                            Name = "Claudie Gislason",
                            PhoneNumber = "250688217",
                            RegisteredOn = false
                        },
                        new
                        {
                            StudentId = new Guid("ca5ed15a-09fd-4f1f-950d-e96f1880c1a1"),
                            Name = "Annamae Mueller",
                            PhoneNumber = "718194221",
                            RegisteredOn = true
                        },
                        new
                        {
                            StudentId = new Guid("b0afe890-45be-4120-948b-01d0d0ca7132"),
                            Name = "Wilfredo Lind",
                            PhoneNumber = "767394690",
                            RegisteredOn = false
                        },
                        new
                        {
                            StudentId = new Guid("e40a911f-bc54-4fab-980d-a15649a41b9f"),
                            Birthday = new DateTime(2003, 8, 25, 18, 42, 13, 349, DateTimeKind.Local).AddTicks(5047),
                            Name = "Zoie Ryan",
                            PhoneNumber = "315894535",
                            RegisteredOn = false
                        },
                        new
                        {
                            StudentId = new Guid("a3372115-f08b-4fbc-bf6f-e8bcb51edd0c"),
                            Name = "Esteban Schuster",
                            PhoneNumber = "925592639",
                            RegisteredOn = true
                        },
                        new
                        {
                            StudentId = new Guid("fe0ae279-9c1d-483b-ac13-d495c9066925"),
                            Birthday = new DateTime(2002, 11, 23, 1, 20, 52, 278, DateTimeKind.Local).AddTicks(1000),
                            Name = "Trey Huel",
                            PhoneNumber = "910401349",
                            RegisteredOn = false
                        },
                        new
                        {
                            StudentId = new Guid("360f4c40-f2f1-4e8c-9efe-f4c59e2478cf"),
                            Name = "Jovanny Reichert",
                            PhoneNumber = "021685728",
                            RegisteredOn = true
                        },
                        new
                        {
                            StudentId = new Guid("4f6198a2-f481-4da4-8b14-38c936376cc9"),
                            Birthday = new DateTime(2004, 6, 26, 16, 58, 33, 191, DateTimeKind.Local).AddTicks(8427),
                            Name = "Colton Durgan",
                            PhoneNumber = "188469344",
                            RegisteredOn = true
                        },
                        new
                        {
                            StudentId = new Guid("909ca786-e345-4fc2-a879-68103417153a"),
                            Birthday = new DateTime(2003, 4, 11, 1, 25, 24, 232, DateTimeKind.Local).AddTicks(9284),
                            Name = "Abbie Wilderman",
                            PhoneNumber = "287942142",
                            RegisteredOn = false
                        },
                        new
                        {
                            StudentId = new Guid("10624f46-1955-489c-8a65-332a543a9217"),
                            Birthday = new DateTime(2003, 10, 27, 0, 53, 49, 500, DateTimeKind.Local).AddTicks(1017),
                            Name = "Genevieve Walter",
                            PhoneNumber = "903355519",
                            RegisteredOn = true
                        },
                        new
                        {
                            StudentId = new Guid("8d172fdd-390f-495a-a1ca-de823e3aa8d0"),
                            Birthday = new DateTime(2004, 4, 30, 8, 56, 45, 168, DateTimeKind.Local).AddTicks(7577),
                            Name = "Vicente Koelpin",
                            PhoneNumber = "305374642",
                            RegisteredOn = true
                        },
                        new
                        {
                            StudentId = new Guid("3d438e36-794b-46e8-946e-23f3f678aa7c"),
                            Name = "Maximillia Tromp",
                            PhoneNumber = "119619767",
                            RegisteredOn = true
                        });
                });

            modelBuilder.Entity("Student_System.Data.Models.StudentsCourses", b =>
                {
                    b.Property<Guid>("StudentId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CourseId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("StudentId", "CourseId");

                    b.HasIndex("CourseId");

                    b.ToTable("StudentsCourses");

                    b.HasData(
                        new
                        {
                            StudentId = new Guid("ca5ed15a-09fd-4f1f-950d-e96f1880c1a1"),
                            CourseId = new Guid("53b4f7f8-90d6-48ee-9aac-697f31e5c697")
                        },
                        new
                        {
                            StudentId = new Guid("7d96f2c1-243b-4dcf-8663-37a01fce18a6"),
                            CourseId = new Guid("2f19ce22-0795-4e88-96f4-aa85ffe36962")
                        },
                        new
                        {
                            StudentId = new Guid("d939edb6-20c9-482a-9dba-da282381e179"),
                            CourseId = new Guid("da56f125-4a16-4266-9016-98fd08e906c1")
                        },
                        new
                        {
                            StudentId = new Guid("b6b3a02f-5f0f-48ee-b9d9-28fb879b4ac0"),
                            CourseId = new Guid("2f19ce22-0795-4e88-96f4-aa85ffe36962")
                        });
                });

            modelBuilder.Entity("Student_System.Data.Models.Homework", b =>
                {
                    b.HasOne("Student_System.Data.Models.Courses", "Course")
                        .WithMany("Homework")
                        .HasForeignKey("CourseId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Student_System.Data.Models.Students", "Student")
                        .WithMany("Homework")
                        .HasForeignKey("StudentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Course");

                    b.Navigation("Student");
                });

            modelBuilder.Entity("Student_System.Data.Models.Resources", b =>
                {
                    b.HasOne("Student_System.Data.Models.Courses", "Course")
                        .WithMany("Resources")
                        .HasForeignKey("CourseId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Course");
                });

            modelBuilder.Entity("Student_System.Data.Models.StudentsCourses", b =>
                {
                    b.HasOne("Student_System.Data.Models.Courses", "Course")
                        .WithMany("StudentsCourses")
                        .HasForeignKey("CourseId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Student_System.Data.Models.Students", "Student")
                        .WithMany("StudentsCourses")
                        .HasForeignKey("StudentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Course");

                    b.Navigation("Student");
                });

            modelBuilder.Entity("Student_System.Data.Models.Courses", b =>
                {
                    b.Navigation("Homework");

                    b.Navigation("Resources");

                    b.Navigation("StudentsCourses");
                });

            modelBuilder.Entity("Student_System.Data.Models.Students", b =>
                {
                    b.Navigation("Homework");

                    b.Navigation("StudentsCourses");
                });
#pragma warning restore 612, 618
        }
    }
}
